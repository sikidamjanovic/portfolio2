{"version":3,"sources":["Components/PersonalInfo.js","Components/Background.js","App.js","serviceWorker.js","index.js"],"names":["PersonalInfo","props","state","showSearching","changeTitle","that","this","setTimeout","setState","className","type","color","height","width","strings","typeSpeed","style","display","flexDirection","expandStyle","renderTyped","Component","Background","scene","THREE","fog","camera","window","innerWidth","innerHeight","position","z","rotation","x","y","renderer","setClearColor","setSize","document","body","appendChild","domElement","ambient","add","directionalLight","set","flash","cloudParticles","rainGeo","i","rainDrop","Math","random","velocity","vertices","push","rainMaterial","size","transparent","rain","load","texture","cloudGeo","cloudMaterial","map","p","cloud","PI","material","opacity","render","requestAnimationFrame","forEach","verticesNeedUpdate","power","addEventListener","aspect","updateProjectionMatrix","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65ed7967.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Typed from 'react-typed';\nimport Fade from 'react-reveal/Fade';\nimport Loader from 'react-loader-spinner'\nimport '../App.css'\n\nclass PersonalInfo extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            showSearching: true,\n            changeTitle: false\n        }\n    }\n\n    componentDidMount(){\n        let that = this\n        setTimeout(function(){ \n            setTimeout(function(){ \n                that.setState({\n                    showSearching: false\n                })\n            }, 1000)\n            that.setState({\n                changeTitle: true\n            })\n        }, 3500)\n    }\n\n    renderTyped(){\n        if(this.state.showSearching){\n            return(\n                <div className=\"loader-container\">\n                    <Fade>\n                        <Loader\n                            type=\"Puff\"\n                            color=\"#7ec6e280\"\n                            height={30}\n                            width={30}\n                        />\n                    </Fade>\n                </div>\n            )\n        }\n        else{\n            return(\n                <div className=\"info-text-container\">\n                    <Typed\n                        className=\"info-text\"\n                        strings={[\n                            '<span id=\"label\">NAME:</span> Sinisa Damjanovic\\n<span id=\"label\">EMAIL:</span> sikidamjanovic@gmail.com\\n<span id=\"label\">SKILL:</span> Full-stack Developer / Designer\\n<span id=\"label\">TOOLS:</span> React, Javascript, HTML + CSS\\n\\n<span id=\"label\">PROJECTS:</span> \\n - Cowrite.io [<a target=\"_blank\" href=\"https://github.com/sikidamjanovic/cowrite\">Repo</a>][<a target=\"_blank\" href=\"https://www.cowrite.io\">Demo</a>]\\n - Kino Movie [<a target=\"_blank\" href=\"https://github.com/sikidamjanovic/kino\">Repo</a>][<a target=\"_blank\" href=\"https://kino-7425a.firebaseapp.com/\">Demo</a>]\\n - Reactriv [<a target=\"_blank\" href=\"https://github.com/sikidamjanovic/reactriv\">Repo</a>][<a target=\"_blank\" href=\"https://reactriv.firebaseapp.com/\">Demo</a>]\\n\\n<span id=label>LINKS: </span>[<a id=\"bottom-link\" href=\"https://github.com/sikidamjanovic\" target=\"_blank\">Github</a>] [<a id=\"bottom-link\" href=\"https://www.linkedin.com/in/sinisa-damjanovic-673053bb/\" target=\"_blank\">LinkedIn</a>] [<a id=\"bottom-link\" href=\"\">Resume</a>] '\n                        ]}\n                        typeSpeed={5}\n                    />\n                </div>\n            )\n        }\n    }\n\n    expandStyle(){\n        if(this.state.changeTitle){\n            return null\n        }else{\n            return({\n                width: '30px'\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"info\">\n\n                <Fade>\n                    {!this.state.changeTitle ?\n                        <div>\n                            <h1 className=\"info-title\">SEARCHING DATABASE</h1>\n                        </div> :\n                        <Fade>\n                            <div>\n                                <h1 className=\"info-title\">1 DEVELOPER(S) FOUND</h1> \n                            </div>\n                        </Fade>\n                    }\n                </Fade>\n\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n\n                    <div className=\"info-container\" style={this.expandStyle()}>\n                        <div className=\"info-corners-top\">\n                            <div className=\"info-corners-bottom\"></div>\n                        </div>\n                        {this.renderTyped()}\n                    </div>\n\n                </div>\n\n            </div>\n        )\n  }\n}\n\nexport default PersonalInfo\n\n// 'NAME: Sinisa Damjanovic\\nSKILLS: React, Javascript, HTML + CSS\\nOCCUPATION: Looking\\nLINKS: Github, LinkedIn, Resume'","import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport PersonalInfo from '../Components/PersonalInfo'\n\nclass Background extends Component {\n\n  componentDidMount() {\n    // SCENE\n    let scene = new THREE.Scene();\n    scene.fog = new THREE.FogExp2(0x000000, 0.002);\n\n    // CAMERA\n    let camera = new THREE.PerspectiveCamera(60,window.innerWidth / window.innerHeight,1,1000);\n    camera.position.z = 1;\n    camera.rotation.x = 1.16;\n    camera.rotation.y = -0.12;\n    camera.rotation.z = 0.27;\n\n    // RENDERER\n    let renderer = new THREE.WebGLRenderer();\n    renderer.setClearColor(scene.fog.color);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // Append canvas to the body\n    document.body.appendChild( renderer.domElement);\n\n    // Ambient Light\n    let ambient = new THREE.AmbientLight(0x405250);\n    scene.add(ambient);\n\n    // Directional Light\n    let directionalLight = new THREE.DirectionalLight(0x2DE2E6);\n    directionalLight.position.set(0,0,1);\n    scene.add(directionalLight);\n\n    // Point Light\n    let flash = new THREE.PointLight(0x062d89, 30, 500, 1.7);\n    flash.position.set(200,300, 100);\n    scene.add(flash);\n\n    // Rain Drop Texture\n    let rainCount=2000;\n    let cloudParticles=[];\n    let rainGeo = new THREE.Geometry();\n    for(let i=0; i<rainCount; i++) {\n    let rainDrop = new THREE.Vector3(\n        Math.random()*400-200,\n        Math.random()*500-250,\n        Math.random()*400-200\n    )\n    rainDrop.velocity = {};\n    rainDrop.velocity = 0;\n    rainGeo.vertices.push(rainDrop);\n    }\n\n    let rainMaterial = new THREE.PointsMaterial({\n    color: 0xaaaaaa,\n    size: 0.1,\n    transparent: true\n    })\n\n    let rain = new THREE.Points(rainGeo, rainMaterial);\n    scene.add(rain)\n\n    /* //////////////////////////////////////// */\n\n    // Smoke Texture Loader\n    let loader = new THREE.TextureLoader();\n    loader.load(\"https://raw.githubusercontent.com/navin-navi/codepen-assets/master/images/smoke.png\", function(texture) {\n    let cloudGeo = new THREE.PlaneBufferGeometry(500,500);\n    let cloudMaterial = new THREE.MeshLambertMaterial({\n        map:texture,\n        transparent: true\n    });\n\n    for(let p=0; p<25; p++) {\n        let cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\n        cloud.position.set(\n        Math.random()*800 -400,\n        500,\n        Math.random()*500-500\n        );\n        cloud.rotation.x = 1.16;\n        cloud.rotation.y = -0.12;\n        cloud.rotation.z = Math.random()*2*Math.PI;\n        cloud.material.opacity = 0.55;\n        cloudParticles.push(cloud);\n        scene.add(cloud);\n    }\n    });\n\n    /* //////////////////////////////////////// */\n\n    // Render animation on every rendering phase\n    function render() {\n    renderer.render(scene, camera);\n    requestAnimationFrame(render);\n    \n    // Cloud Rotation Animation\n    cloudParticles.forEach(p => {\n        p.rotation.z -= 0.002;\n    })\n    \n    // RainDrop Animation\n    rainGeo.vertices.forEach(p => {\n        p.velocity -= 3*Math.random()*1;\n        p.y += p.velocity;\n        if(p.y < -100){\n        p.y = 100;\n        p.velocity = 0;\n        }\n    })\n    rainGeo.verticesNeedUpdate = true;\n    rain.rotation.y += 0.002;\n    \n    // Lightening Animation\n    if(Math.random() > 0.96 || flash.power > 100) {\n        if(flash.power<100) {\n        flash.position.set(\n            Math.random()*400,\n            300+Math.random()*200,\n            100\n        );\n        }\n        flash.power = 50 + Math.random() * 500;\n    }\n    }\n\n    render();\n\n    /* //////////////////////////////////////// */\n\n    // Update Camera Aspect Ratio and Renderer ScreenSize on Window resize\n    window.addEventListener( 'resize', function () {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    }, false );\n\n    /*////////////////////////////////////////*/\n  }\n  render() {\n    return (\n        <div className=\"background\">\n            <PersonalInfo/>\n        </div>\n    )\n  }\n}\n\nexport default Background","import React, { Component } from \"react\";\nimport './App.css'\nimport Background from \"./Components/Background\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n            <Background/>\n        </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}